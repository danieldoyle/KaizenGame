{"version":3,"sources":["Game.js"],"names":["Helpers","require","cc","Class","extends","Component","properties","jiraPrefab","default","type","Prefab","maxJiraDuration","minJiraDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","url","AudioClip","onFireAudio","onFireNode","gameOverDisplay","gameOverAudio","backgroundMusic","sceneActionRoot","onLoad","backgroundMusicId","audioEngine","playMusic","groundY","y","height","timer","jiraDuration","spawnNewJIRA","score","active","gameOverFlag","newJIRA","instantiate","node","addChild","setPosition","getNewJIRAPosition","getComponent","game","random0To1","randX","randY","getRandomInt","maxX","width","randomMinus1To1","p","update","dt","gameOver","gainScore","string","toString","playEffect","restart","director","loadScene","stopMusic","stopAllActions"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var Helpers = require('Helpers');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        jiraPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        maxJiraDuration: 0,\n        minJiraDuration: 0,\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        scoreAudio: {\n            default: null,\n            url: cc.AudioClip\n        },\n        onFireAudio: {\n            default: null,\n            url: cc.AudioClip\n        },\n        onFireNode: {\n            default: null,\n            type: cc.Node\n        },\n        gameOverDisplay: {\n            default: null,\n            type: cc.Node\n        },\n        gameOverAudio: {\n            default: null,\n            url: cc.AudioClip\n        },\n        backgroundMusic: {\n            default: null,\n            url: cc.AudioClip\n        },\n        sceneActionRoot: {\n            default: null,\n            type: cc.Node\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.backgroundMusicId = cc.audioEngine.playMusic(this.backgroundMusic, true);\n        this.groundY = this.ground.y + this.ground.height/2;\n        this.timer = 0;\n        this.jiraDuration = 0;\n        this.spawnNewJIRA();\n        this.score = 0;\n        this.gameOverDisplay.active = false;\n        this.gameOverFlag = false;\n    },\n\n    spawnNewJIRA: function() {\n        var newJIRA = cc.instantiate(this.jiraPrefab);\n        this.node.addChild(newJIRA);\n        newJIRA.setPosition(this.getNewJIRAPosition());\n        newJIRA.getComponent('JIRA').game = this;\n        this.jiraDuration = this.minJiraDuration + cc.random0To1() * (this.maxJiraDuration - this.minJiraDuration);\n        this.timer = 0;\n    },\n\n    getNewJIRAPosition: function () {\n        var randX = 0;\n        var randY = Helpers.getRandomInt(-100, 100);\n        var maxX = this.node.width/2;\n        randX = cc.randomMinus1To1() * maxX;\n        return cc.p(randX, randY);\n    },\n\n    // called every frame\n    update: function (dt) {\n        if (this.timer > this.jiraDuration) {\n            if (!this.gameOverFlag)\n            {\n                this.gameOver();\n            }\n            return;\n        }\n        this.timer += dt;\n    },\n\n    gainScore: function () {\n        this.score += 1;\n        this.scoreDisplay.string = 'Sprint Capacity: ' + this.score.toString();\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n        if (this.score % 5 === 0)\n        {\n            cc.audioEngine.playEffect(this.onFireAudio, false);\n            this.onFireNode.active = true;\n        }\n    },\n\n    restart: function() {\n        cc.director.loadScene('game');\n    \n    },\n\n    gameOver: function () {\n        cc.audioEngine.stopMusic(this.backgroundMusicId);\n        this.gameOverFlag = true;\n        this.player.stopAllActions(); \n        cc.audioEngine.playEffect(this.gameOverAudio, false);\n        this.gameOverDisplay.active = true;\n        this.sceneActionRoot.active = false;\n    }\n});\n"]}