{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\JIRA.js"],"names":["Helpers","require","cc","Class","extends","Component","properties","pickRadius","game","default","serializable","spriteList","type","SpriteFrame","onLoad","randomIdx","getRandomInt","length","sprite","getComponent","Sprite","spriteFrame","getPlayerDistance","playerPos","player","getPosition","dist","pDistance","node","position","onPicked","spawnNewJIRA","gainScore","destroy","onCollisionEnter","other","self","update","dt","gameOverFlag","opacityRatio","timer","jiraDuration","minOpacity","opacity","Math","floor","rotation"],"mappings":";;;;;;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAY,CADJ;AAERC,cAAM;AACFC,qBAAS,IADP;AAEFC,0BAAc;AAFZ,SAFE;AAMRC,oBAAY;AACRF,qBAAS,EADD;AAERG,kBAAM,CAACV,GAAGW,WAAJ;AAFE;AANJ,KAHP;;AAeL;AACAC,YAAQ,kBAAY;AAChB,YAAIC,YAAYf,QAAQgB,YAAR,CAAqB,CAArB,EAAwB,KAAKL,UAAL,CAAgBM,MAAxC,CAAhB;AACA,YAAIC,SAAS,KAAKC,YAAL,CAAkBjB,GAAGkB,MAArB,CAAb;AACAF,eAAOG,WAAP,GAAqB,KAAKV,UAAL,CAAgBI,SAAhB,CAArB;AACH,KApBI;;AAuBLO,uBAAmB,6BAAY;AAC3B,YAAIC,YAAY,KAAKf,IAAL,CAAUgB,MAAV,CAAiBC,WAAjB,EAAhB;AACA,YAAIC,OAAOxB,GAAGyB,SAAH,CAAa,KAAKC,IAAL,CAAUC,QAAvB,EAAiCN,SAAjC,CAAX;AACA,eAAOG,IAAP;AACH,KA3BI;;AA6BLI,cAAU,oBAAW;AACjB,aAAKtB,IAAL,CAAUuB,YAAV;AACA,aAAKvB,IAAL,CAAUwB,SAAV;AACA,aAAKJ,IAAL,CAAUK,OAAV;AACH,KAjCI;;AAmCLC,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrC,aAAKN,QAAL;AAEH,KAtCI;;AAwCL;AACAO,YAAQ,gBAAUC,EAAV,EAAc;AAClB,YAAI,KAAK9B,IAAL,CAAU+B,YAAd,EACA;AACI,iBAAKX,IAAL,CAAUK,OAAV;AACH;AACD,YAAIO,eAAe,IAAI,KAAKhC,IAAL,CAAUiC,KAAV,GAAgB,KAAKjC,IAAL,CAAUkC,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKf,IAAL,CAAUgB,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACA,aAAKf,IAAL,CAAUmB,QAAV,IAAsB,CAAtB;AACH;AAlDI,CAAT","file":"JIRA.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var Helpers = require('Helpers');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        pickRadius: 0,\n        game: {\n            default: null,\n            serializable: false\n        },\n        spriteList: {\n            default: [],\n            type: [cc.SpriteFrame]\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        var randomIdx = Helpers.getRandomInt(0, this.spriteList.length);\n        var sprite = this.getComponent(cc.Sprite);\n        sprite.spriteFrame = this.spriteList[randomIdx];\n    },\n\n\n    getPlayerDistance: function () {\n        var playerPos = this.game.player.getPosition();\n        var dist = cc.pDistance(this.node.position, playerPos);\n        return dist;\n    },\n\n    onPicked: function() {\n        this.game.spawnNewJIRA();\n        this.game.gainScore();\n        this.node.destroy();\n    },\n\n    onCollisionEnter: function (other, self) {\n        this.onPicked();\n    \n    },\n\n    // called every frame\n    update: function (dt) {\n        if (this.game.gameOverFlag)\n        {\n            this.node.destroy();\n        }\n        var opacityRatio = 1 - this.game.timer/this.game.jiraDuration;\n        var minOpacity = 50;\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n        this.node.rotation += 5;\n    },\n});\n"]}